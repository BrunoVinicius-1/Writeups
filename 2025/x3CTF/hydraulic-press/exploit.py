import base64
import zlib

def decode(input_file, output_file):
    with open(input_file, 'rb') as fin, open(output_file, 'wb') as fout:
        encoded_data = fin.read()
        decoded_data = base64.a85decode(encoded_data)
        fout.write(decoded_data)

def decompress(input_file, output_file, chunk_size=1024 * 1024):
    decompressor = zlib.decompressobj()

    with open(input_file, 'rb') as fin, open(output_file, 'wb') as fout:
        while chunk := fin.read(chunk_size):
            fout.write(decompressor.decompress(chunk))
        fout.write(decompressor.flush())

def filter(input_file, output_file):
    with open(input_file, 'rb') as fin, open(output_file, "wb") as fout:
        data = fin.read().replace(b'\x55'*4095, b"\x55").replace(b'\xAA'*4095, b"\xAA")
        fout.write(data)

def decompress_flag(input_file, output_file, chunk_size=1024 * 1024):
    decompressor = zlib.decompressobj()

    with open(input_file, 'rb') as fin, open(output_file, 'wb') as fout:
        while chunk := fin.read(chunk_size):
            decompressed_chunk = decompressor.decompress(chunk)

            for b in decompressed_chunk:
                if b != 0x00:
                    fout.write(bytes([b]))
                if b == 0x7D: 
                    return

decode('flag.txt', 'flag1.txt')
decompress("flag1.txt", "flag2.txt")
decompress("flag2.txt", "flag3.txt")
decompress("flag3.txt", "flag4.txt")
filter("flag4.txt", "flag5.txt")
decompress_flag("flag5.txt", "flag6.txt")
